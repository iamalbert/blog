<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java functional interface</title>
    <link href="/blog/2023/09/07/java-function/"/>
    <url>/blog/2023/09/07/java-function/</url>
    
    <content type="html"><![CDATA[<h2 id="Defined-Interfaces-in-java-util-function"><a href="#Defined-Interfaces-in-java-util-function" class="headerlink" title="Defined Interfaces in java.util.function"></a>Defined Interfaces in <code>java.util.function</code></h2><table><thead><tr><th>Signature</th><th>Name</th><th>Method</th></tr></thead><tbody><tr><td>()     -&gt; R</td><td>Supplier<R></td><td>get</td></tr><tr><td></td><td></td><td></td></tr><tr><td>T      -&gt; R</td><td>Function&lt;T, R&gt;</td><td>apply</td></tr><tr><td>T      -&gt; boolean</td><td>Predicate<T></td><td>test</td></tr><tr><td>T      -&gt; Void</td><td>Consumer<T></td><td>accept</td></tr><tr><td>T      -&gt; T</td><td>UnaryOperator<T></td><td>apply</td></tr><tr><td></td><td></td><td></td></tr><tr><td>(T, U) -&gt; R</td><td>BiFunction&lt;T, U, R&gt;</td><td>apply</td></tr><tr><td>(T, U) -&gt; boolean</td><td>BiPredicate&lt;T, U&gt;</td><td>test</td></tr><tr><td>(T, U) -&gt; Void</td><td>BiConsumer&lt;T, U&gt;</td><td>apply</td></tr><tr><td>(T, T) -&gt; T</td><td>BinaryOperator<T></td><td>apply</td></tr><tr><td></td><td></td><td></td></tr><tr><td>()     -&gt; Void</td><td>java.lang.Runnable</td><td>run</td></tr></tbody></table><h2 id="Custom-Functional-interfaces"><a href="#Custom-Functional-interfaces" class="headerlink" title="Custom Functional interfaces"></a>Custom Functional interfaces</h2><ol><li>Interface must have exactly one non-overriding abstract method.</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">X1</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">()</span>;<br>&#125;;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">X2</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">number</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;;<br><br><span class="hljs-meta">@FunctionalInterface</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">X3</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-meta">@Override</span><br>    String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span>;<br>&#125;;<br><br><br><span class="hljs-meta">@FunctionalInterface</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">X4</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>Use <code>java.lang.FunctionalInterface</code> annotation so that compiler check if it matches the criteria.</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FunctionalInterface</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">X5</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func1</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">func2</span><span class="hljs-params">()</span>;<br>&#125; <br><span class="hljs-comment">/*</span><br><span class="hljs-comment">|  Error:</span><br><span class="hljs-comment">|  Unexpected @FunctionalInterface annotation</span><br><span class="hljs-comment">|    X5 is not a functional interface</span><br><span class="hljs-comment">|      multiple non-overriding abstract methods found in interface X5</span><br><span class="hljs-comment">|  @FunctionalInterface</span><br><span class="hljs-comment">*/</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
